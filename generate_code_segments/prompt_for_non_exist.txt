Generate only 1 C code program that does not have an Off-by-One heap vulnerability, commonly found in CTF competitions. Each code snippet should be functional and unique in terms of the used variables, function names, and structure. For all snippets, ensure the following elements are included: Allocate memory for a heap buffer using malloc. Use a loop to write data into the buffer, ensuring the loop iterates exactly the same number of times as the buffer size, avoiding an Off-by-One error. The code should include a function that may be called with the correct parameter. Create a struct that is stored on the heap, where the struct remains unaffected due to the absence of Off-by-One errors. Incorporate a variety of variable names, function names, and comments to increase diversity in the generated code. Please ensure the generated code snippets are syntactically correct, have proper indentation, and are representative of real-world code without Off-by-One vulnerabilities encountered in CTF competitions. The code should be in English and follow standard C coding conventions. You should only output codes, nothing else. The pure-code section needs to start as code_start, ends with code_end, also, inside of the code section, there shouldn't be any explanation, nothing other than , etc, the length of generated code should be under 512 characters